#! /bin/bash
#set -x


declare OLDPWD=${PWD}
declare UMASK=$(umask)

trap "(cd ${OLDPWD} && umask ${UMASK}) || return 1" EXIT KILL SIGINT SIGTERM

umask 022

function git_command () {
    local BRANCH=$(git for-each-ref --format='%(refname:short)' $(git symbolic-ref HEAD))
    git remote update --prune origin >> /dev/null || return 1

    git fetch --prune --quiet origin || return 1
    git fetch --prune --tags --quiet origin || return 1

    git stash save --quiet || true
    git merge --no-stat --ff-only origin/"${BRANCH}" || \
        echo "${PWD}: origin/${BRANCH} needs manual inspection" >> /tmp/git-ffwd.txt
    git stash pop --quiet || true

    find . \( -iname '*.orig' -o -name '*.BASE.*' -o -name '*.LOCAL.*' -o -name '*.REMOTE.*' -o -name '*.BACKUP.*' \) -delete

    git reflog expire --all
    git fsck --unreachable --full
    git prune
    git gc --aggressive --quiet
    git repack -Adq
    git prune-packed --quiet
}

function svn_command () {
    git svn fetch || return 1
    git svn rebase || return 1
}

for i in $(find ~/repositories -name ".git" | sort -u)
do
    declare GIT_WORK_TREE="${i//\/.git}"
    cd "${GIT_WORK_TREE}" &> /dev/null

    echo "${GIT_WORK_TREE}"

    if [ -r "${i}"/svn/.metadata ]; then
        svn_command || exit 2
    else
        git_command || exit 2
    fi

    echo
done

umask ${UMASK}
cd ${OLDPWD}
